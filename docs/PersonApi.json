
[{
    "methodType":"POST",
    "methodName":"createperson",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Person"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiPersonApi = new TempApi.PersonApi();",
    "importModelParameter":["let person = new TempApi.Person();"],
    "modelNames":["person"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiPersonApi.createperson( person, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deleteperson",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiPersonApi = new TempApi.PersonApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiPersonApi.deleteperson( personId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAllperson",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Person]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiPersonApi = new TempApi.PersonApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiPersonApi.getAllperson((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GETBYPARAMS",
    "methodName":"getByParamsperson",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Person]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiPersonApi = new TempApi.PersonApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiPersonApi.getByParamsperson( filter, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"getperson",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Person"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiPersonApi = new TempApi.PersonApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiPersonApi.getperson( personId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updateperson",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Person"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiPersonApi = new TempApi.PersonApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiPersonApi.updateperson( personId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
